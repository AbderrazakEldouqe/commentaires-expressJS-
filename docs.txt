git init 
npm init 

npm install --save nodemon

dans package.json add 
"scripts": {
    "test": "yes",
    "start": "nodemon server.js"
  }
  pour demmarer le serveur : npm run start


  installer express : npm install --save express

    premier test code pour express dans server.js
    let app = require('express')();

    app.get('/', (request, response) => {
        response.send('salut tous le monde');
    });

    app.listen(8080);

  installer moteur de template : npm install --save ejs

        let app = require('express')();

        ****>>> app.set('view engine','ejs');

        app.get('/', (request, response) => {
            ****>>> response.render('pages/index',{test:'salut'});
        });

        app.listen(8080);
        cree dossier views ->pages -> index.ejs
        dans HTML pour afficher variable test :  <%= test %>

        Add materialize css (statique):
        cree dossier public and ajouter dossier materialize telecharge 
        https://materializecss.com/getting-started.html

        sur page index.ejs ajouter dans head 
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
        <!--Import materialize.css-->
        <link type="text/css" rel="stylesheet" href="/assets/materialize/css/materialize.min.css" media="screen,projection" />
        <!--JavaScript at end of body for optimized loading-->
        <script type="text/javascript" src="/assets/materialize/js/materialize.min.js"></script>

        sur server.js ajouter :
        app.use('/assets',express.static('public'));
        

        diviser page avec footer et header
        cree dossier dans pages -> includes  -> header.ejs ->footer.ejs
        <%- include('includes/header'); -%>
          <h1>Bonjour tous le monde</h1>
          <p><%= test %></p>
        <%- include('includes/footer'); -%>


        add form and input and button sumbit in index.ejs
        add methode post in server.js
        app.post('/', (request, response) => {
         console.log(request.body);
          });

        pour connaitre request.body dans request post il faut installer body-parser
        npm install --save body-parser 
        https://github.com/expressjs/body-parser
        ajouter dans server.js
        let bodyParser = require('body-parser');
        // parse application/x-www-form-urlencoded
        app.use(bodyParser.urlencoded({ extended: false }));
        // parse application/json
        app.use(bodyParser.json());

        add validation to input 
        Cas 1 :::
        app.post('/', (request, response) => {
          if(request.body.message === undefined || request.body.message === '')
          {
              response.render('pages/index',{error:"vous n'avez pas entrer un message"});
          }
        });
        <% if(locals.error){%>
        <div class="row" id="alert_box">
            <div class="col s6 offset-s3">
                <div class="card red darken-1">
                    <div class="row">
                        <div class="col s12 m10">
                            <div class="card-content white-text">
                                <p><%- locals.error -%></p>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <% }%>
        ******************************************************
        Cas 2 ::::: on utilise session
        npm install --save express-session
        https://github.com/expressjs/session
        add in server 
        app.use(session({
        secret: 'hero',
        resave: false,
        saveUninitialized: true,
        cookie: { secure: false }
        }));

        app.get('/', (request, response) => {
            if(request.session.error)
            {
                response.locals.error=request.session.error;
                request.session.error=undefined;
            }
            response.render('pages/index', { test: 'salut' });
        });

        app.post('/', (request, response) => {
            if(request.body.message === undefined || request.body.message === '')
            {
                request.session.error="vous n'avez pas entrer un message";
                response.redirect('/');
            }
        });
        ****Redifini les message aves des flash (middlewares)
        ajouter dossier middlewares ->> flash.js
        module.exports = function (request, response, next) {
            if (request.session.flash) {
                response.locals.flash=request.session.flash;
                request.session.flash=undefined;
                console.log("S1");
            }

            request.flash = function (type, content) {
                if (request.session.flash === undefined) {
                    request.session.flash = {};
                }
                request.session.flash[type] = content;
                console.log("S2");
            }
            console.log("S3");
            next();

          }

          dans server.js
          app.use(require('./middlewares/flash'));

          app.get('/', (request, response) => {
                console.log(response.locals.flash);
                response.render('pages/index', { test: 'salut' });
            });

            app.post('/', (request, response) => {
                if (request.body.message === undefined || request.body.message === '') {
                    request.flash('error',"vous n'avez pas entrer un message");
                    response.redirect('/');
                }else{
                    request.flash('error',"message envoyé");
                    response.redirect('/');
                }
            });

            dans header.ejs
            <% if(locals.flash && locals.flash.error){%>
            <div class="row" id="alert_box">
                <div class="col s6 offset-s3">
                    <div class="card red darken-1">
                        <div class="row">
                            <div class="col s12 m10">
                                <div class="card-content white-text">
                                    <p><%- locals.flash.error -%></p>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <% }%>

            ****************************************************
            install mysql :
            npm install --save mysql

            add folder config ->>> db.js
            let mysql      = require('mysql');
            let connection = mysql.createConnection({
              host     : 'localhost',
              user     : 'root',
              password : '',
              database : 'nodeJS_messages'
            });
            connection.connect();
            module.exports = connection;

            add folder models ->> message.js
            let connection = require('../config/db');
            class Message {


                static create(content,cb) {
                    connection.query('INSERT INTO messages SET content=? ,created_at=?',
                        [content, new Date()], (err, res) => {
                            if(err) throw err;
                            cb(res);

                        });
                }
            }
            module.exports = Message

            in server.js methode post add
            app.post('/', (request, response) => {
                if (request.body.message === undefined || request.body.message === '') {
                    request.flash('error', "vous n'avez pas entrer un message");
                    response.redirect('/');
                } else {
                    let Message = require('./models/message');
                    Message.create(request.body.message, function (result) {
                        request.flash('success', "message envoyé");
                        console.log(result);
                        response.redirect('/');
                    });
                    
                  
                }
            });

            ********************
            add moment library to format date 
            npm install --save moment
            pour translation on a ajouter dans dossier config moment
            https://momentjs.com/docs/#/i18n/
            ******************
            static all(cb) {
            connection.query('select * from messages order by id desc',
                [], (err, rows) => {
                    if (err) throw err;
                    cb(rows.map((row) => {
                        return new Message(row);
                    }));
                });

              }
              pour changer format on a ajouter contructeur et getters
              constructor(row) {
                  this.row = row;
              }
              get id()
              {
                  return this.row.id;
              }
              get content() {
                  return this.row.content;
              }
              get created_at() {
                  return moment(this.row.created_at);
              }
              et dans html
              <div class="row">
                <div class="col s6 offset-s3">

                    <ul class="collection">
                        <% for(message of messages) { %>
                        <li class="collection-item avatar">
                            <i class="material-icons circle red">play_arrow</i>
                            <span class="title"><small><%- message.created_at.fromNow() -%></small></span>
                            <p><%- message.content -%></p>
                          
                        </li>
                        <% } %>
                    </ul>
                </div>
            </div>

            ******************************
            show page 
            app.get('/message/:id', (request, response) => {
              let Message = require('./models/message');

              Message.find(request.params.id,(message) => {
                  response.render('pages/messages/show', { message: message });

              });

            });

            static find(id,cb) {
                connection.query('select * from messages where id=?',
                    [id], (err, rows) => {
                        if (err) throw err;
                        cb(new Message(rows[0]));
                    });
            }

            add messages/show.ejs

            <%- include('../includes/header'); -%>

                <div class="row">
                    <div class="col s6 offset-s3">

                        <ul class="collection">
                          
                            <li class="collection-item avatar">
                                <i class="material-icons circle red">play_arrow</i>
                                <span class="title"><small><%- message.created_at.fromNow() -%></small></span>
                                <p><%- message.content -%></p>
                              
                            </li>
                          
                        </ul>
                    </div>
                </div>
                <%- include('../includes/footer'); -%>

                *******************
                





        


